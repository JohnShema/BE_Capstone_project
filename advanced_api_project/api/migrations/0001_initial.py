# Generated by Django 5.2.4 on 2025-08-17 12:22

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Enter the author's full name", max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Author',
                'verbose_name_plural': 'Authors',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text="Enter the book's title", max_length=300)),
                ('publication_year', models.IntegerField(help_text='Enter the year the book was published', validators=[django.core.validators.MinValueValidator(1000, message='Publication year must be at least 1000'), django.core.validators.MaxValueValidator(2025, message='Publication year cannot be in the future')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(help_text='Select the author of this book', on_delete=django.db.models.deletion.CASCADE, related_name='books', to='api.author')),
            ],
            options={
                'verbose_name': 'Book',
                'verbose_name_plural': 'Books',
                'ordering': ['-publication_year', 'title'],
                'unique_together': {('author', 'title', 'publication_year')},
            },
        ),
    ]
